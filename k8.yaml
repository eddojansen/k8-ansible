---
- hosts: all
  become: true
  tasks:

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Install docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker.io

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip="{{ ansible_default_ipv4.address }}"
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

- hosts: master
  become: no
  tasks:

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="{{ ansible_default_ipv4.address }}" --apiserver-cert-extra-sans="{{ ansible_default_ipv4.address }}"  --node-name "{{ inventory_hostname }}" --pod-network-cidr=10.244.0.0/16
    become: yes

  - pause: seconds=10

  - name: Change file ownership, group and permissions
    file:
      path: /etc/kubernetes/admin.conf
      mode: '0644'
    become: yes
    tags: permission

  - name: Adding KUBECONFIG to /etc/environment
    lineinfile:
      dest: /etc/environment
      line: "KUBECONFIG=/etc/kubernetes/admin.conf"
      insertafter: 'EOF'
      regexp: "KUBECONFIG=/etc/kubernetes/admin.conf"
      state: present
    become: yes
    tags: permission

  - name: Setup kubeconfig
    command: "{{ item }}"
    with_items:
     - sudo mkdir -p /home/{{ansible_user_id}}/.kube
     - sudo cp -i /etc/kubernetes/admin.conf /home/{{ansible_user_id}}/.kube/config
     - sudo chown {{ansible_user_id}}:{{ansible_user_id}} /home/{{ansible_user_id}}/.kube/config
    become: no
    ignore_errors: yes
    tags: permission
 
  - name: Install flannel pod network
    become: yes
    command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

- hosts: workers
  become: yes
  tasks:

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh

- hosts: master
  become: no
  tasks:

  - pause: seconds=10

  - name: Check status
    shell: 
      cmd: kubectl get nodes
    tags: test
