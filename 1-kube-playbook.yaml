- hosts: all
  become: yes
  tasks:

  - name: Install packages
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - ca-certificates
      - curl
      - apt-transport-https
      - gnupg-agent
      - vim
      - software-properties-common

  - name: Add Dockerâ€™s official GPG key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add Docker Repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
      state: present
      filename: docker
      mode: 0600
      update_cache: yes

  - name: Add Google official GPG key
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Add Kubernetes Repository
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list
      mode: 0600
      update_cache: yes

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none
  - name: Disable swap

    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      sysctl_set: yes
      state: present
      reload: yes
      state: present

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
    vars:
      packages:
        - docker.io      
        - kubelet
        - kubeadm
        - kubectl

  - name: Start and enable docker 
    service:
      name: docker
      state: started
      enabled: yes

  - name: Start and enable kubelet 
    service:
      name: kubelet
      state: started
      enabled: yes

- hosts: master
  become: yes
  tasks:
  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --node-name k8-csi-demo-0-9k0x  --pod-network-cidr=192.168.0.0/16

  - name: Setup kubeconfig
    command: "{{ item }}"
    with_items:
     - mkdir -p /root/.kube
     - cp -i /etc/kubernetes/admin.conf /root/.kube/config
     - chown root:root /root/.kube/config
    ignore_errors: yes

  - name: Copy calico.yaml
    copy:
       src: templates/calico.yaml
       dest: /tmp/

  - name: Install calico pod network
    command: kubectl apply -f /tmp/calico.yaml

  - name: Allow running pods on master
    command: kubectl taint nodes --all node-role.kubernetes.io/master-

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

- hosts: slaves
  become: yes
  tasks:
  - pause: seconds=60

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh

